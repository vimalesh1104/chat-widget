{"version":3,"file":"pics-module-chat-redbird-ai.js","sources":["../../../../projects/pics-module/chat-redbird-ai/src/lib/chat-redbird-ai.service.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/@core/urls/chat-redbird-ai-url.config.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/@core/service/store.service.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/@core/permissions/permission.store.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/@core/service/data-store.service.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/chat-redbird-ai/animations.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/@core/service/chatbot-rasa.service.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/chat-redbird-ai/chat-avatar/chat-avatar.component.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/chat-redbird-ai/chat-input/chat-input.component.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/@core/pipes/array-keys.pipe.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/chat-redbird-ai/chat-widget/chat-widget.component.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/chat-redbird-ai/chat-widget/chat-widget.component.html","../../../../projects/pics-module/chat-redbird-ai/src/lib/chat-redbird-ai.component.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/@core/service/alert.service.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/@core/service/http.service.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/chat-redbird-ai/chat-config/chat-config.component.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/pics-chat-redbird-ai/pics-chat-redbird-ai.module.ts","../../../../projects/pics-module/chat-redbird-ai/src/lib/chat-redbird-ai.module.ts","../../../../projects/pics-module/chat-redbird-ai/src/public-api.ts","../../../../projects/pics-module/chat-redbird-ai/src/pics-module-chat-redbird-ai.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatRedbirdAiService {\r\n\r\n  constructor() { }\r\n}\r\n","export class RBACINFO {\r\n  apiHost ='';\r\n  tokenKey = '';\r\n  others?: any;\r\n  orgID?: any;\r\n  environment?: Environment;\r\n}\r\nexport class Environment {\r\n  mstrUsername?: string;\r\n  mstrPassword?: string;\r\n  mstrURL?: string;\r\n  mstrProjectID?: string;\r\n  applicationid?: string;\r\n  priority?: string\r\n}\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport class Store<T> {\r\n  state$: Observable<T>;\r\n  private _state$: BehaviorSubject<T>;\r\n\r\n  protected constructor(initialState: T) {\r\n    this._state$ = new BehaviorSubject(initialState);\r\n    this.state$ = this._state$.asObservable();\r\n  }\r\n\r\n  get state(): T {\r\n    return this._state$.getValue();\r\n  }\r\n\r\n  setState(nextState: T): void {\r\n    this._state$.next(nextState);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Store } from '../service/store.service';\r\n@Injectable()\r\nexport class PermissionStore extends Store<any> {\r\n  constructor() {\r\n    super({});\r\n  }\r\n\r\n  setStore(data: any): void {\r\n    if(data){\r\n      this.setState({ ...this.state, ...data });\r\n    }\r\n  }\r\n\r\n  getStore(type: string = 'P'): Observable<any> {\r\n    if (type === 'P') return of(this.state);\r\n    else return of(this.state);\r\n  }\r\n\r\n  private flat(array: any[]) {\r\n    let result: any[] = [];\r\n    if(array){\r\n      array.forEach(item => {\r\n        result.push(item);\r\n        if (item && Array.isArray(item)) {\r\n          result = result.concat(this.flat(item));\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class DataStoreService {\r\n  private currentStoreSubject = new BehaviorSubject<any>({} as any);\r\n  public currentStore = this.currentStoreSubject.asObservable();\r\n\r\n  constructor() {\r\n    // test code\r\n  }\r\n\r\n  setData(key: string, value: any) {\r\n    const currentStore = this.getCurrentStore();\r\n    currentStore[key] = value;\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  setObject(value: any) {\r\n    this.currentStoreSubject.next(value);\r\n  }\r\n\r\n  getData(key: string): any {\r\n    const currentStore = this.getCurrentStore();\r\n    return currentStore[key];\r\n  }\r\n\r\n  clearStore() {\r\n    const currentStore = this.getCurrentStore();\r\n    Object.keys(currentStore).forEach((key) => {\r\n      delete currentStore[key];\r\n    });\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  getCurrentStore(): any {\r\n    return this.currentStoreSubject.value;\r\n  }\r\n}\r\n","import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport const fadeInOut = trigger('fadeInOut', [\r\n  transition(':enter', [style({ opacity: 0 }), animate(250)]),\r\n  transition('* => void', [\r\n    animate(\r\n      250,\r\n      style({\r\n        opacity: 0\r\n      })\r\n    )\r\n  ])\r\n]);\r\n\r\nexport const fadeIn = trigger('fadeIn', [\r\n  transition(':enter', [style({ opacity: 0 }), animate(500)]),\r\n  transition(':leave', [style({ opacity: 0 }), animate(1)])\r\n]);\r\n","import { Injectable } from '@angular/core';\r\nimport io from 'socket.io-client';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DataStoreService } from './data-store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatBotRasaService {\r\n  private socket: any;\r\n  chatBotUrl: any;\r\n  RBACORG: any;\r\n  url: any;\r\n  tokenKey: any;\r\n  // chatBotUrl = 'environment.ChatBotNew';\r\n  constructor(private http: HttpClient, private _storeservice: DataStoreService) {\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n        this.RBACORG = res['RBACORG'];\r\n        this.url = this.RBACORG['apiHost'] ? this.RBACORG['apiHost'] : 'http://localhost:3000/api';\r\n        this.tokenKey = this.RBACORG['tokenKey'];\r\n        this.chatBotUrl = this.RBACORG.environment['ChatBotNew'];\r\n      }\r\n    });\r\n  }\r\n\r\n  public connect(url: string) {\r\n    const tokenvalues = sessionStorage.getItem('fbToken') ? sessionStorage.getItem('fbToken') : '';\r\n    const username = sessionStorage.getItem('username') ? sessionStorage.getItem('username') : '';\r\n    const email = sessionStorage.getItem('email') ? sessionStorage.getItem('email') : '';\r\n    const id = sessionStorage.getItem('id') ? sessionStorage.getItem('id') : '';\r\n    this.socket = io(url, {\r\n      reconnection: true,\r\n      reconnectionDelay: 1000,\r\n      reconnectionDelayMax: 5000,\r\n      reconnectionAttempts: Infinity,\r\n      forceNew: true,\r\n      secure: true,\r\n      query: {\r\n        token: tokenvalues ? tokenvalues : '',\r\n        username: username ? username : 'Tulasireddy',\r\n        email: email ? email : 'tulasi@cardinality.ai',\r\n        id: id ? id : '1234'\r\n      }\r\n    });\r\n    this.socket.on('connect', () => {\r\n      this.socket.emit('session_request', { session_id: this.socket.id });\r\n    });\r\n    this.socket.on('session_confirm', (_remote_id: any) => {\r\n      //not to be empty\r\n    });\r\n    this.socket.on('connect_error', (error: any) => {\r\n      console.log(error);\r\n    });\r\n\r\n    this.socket.on('error', (error: any) => {\r\n      console.log(error);\r\n    });\r\n\r\n    this.socket.on('disconnect', (reason: any) => {\r\n      console.log(reason);\r\n    });\r\n  }\r\n\r\n  public sendMessage(message: any) {\r\n    const tokenvalues = sessionStorage.getItem('fbToken') ? sessionStorage.getItem('fbToken') : '';\r\n    const username = sessionStorage.getItem('username') ? sessionStorage.getItem('username') : '';\r\n    const email = sessionStorage.getItem('email') ? sessionStorage.getItem('email') : '';\r\n    const id = sessionStorage.getItem('id') ? sessionStorage.getItem('id') : '';\r\n    this.socket.emit('user_uttered', {\r\n      message: message,\r\n      customData: {\r\n        token: tokenvalues ? tokenvalues : '',\r\n        username: username ? username : '',\r\n        email: email ? email : '',\r\n        id: id ? id : ''\r\n      }\r\n    });\r\n  }\r\n\r\n  public getMessages = () => {\r\n    return new Observable(observer => {\r\n      this.socket.on('bot_uttered', (message: any) => {\r\n        observer.next(message);\r\n      });\r\n    });\r\n  };\r\n  public disconnect() {\r\n    this.socket.on('disconnect', (reason: any) => {\r\n      console.log(reason);\r\n    });\r\n  }\r\n  public searchMenus(modal: any) {\r\n    const inputRequest = {\r\n      query: modal\r\n    };\r\n    return this.http.post(this.chatBotUrl + 'search', inputRequest);\r\n  }\r\n  public sendFeedback(modal: any) {\r\n    const inputRequest = {\r\n      user: sessionStorage.getItem('username') ? sessionStorage.getItem('username') : '',\r\n      question: modal.question,\r\n      isLiked: modal.islike ? true : false\r\n    };\r\n    return this.http.post(this.chatBotUrl + 'feedback', inputRequest);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chat-avatar',\r\n  template: ' <img [attr.src]=\"image\" class=\"avatar\" /> ',\r\n  styles: [\r\n    `\r\n      .avatar {\r\n        height: 30px;\r\n        width: 30px;\r\n        border-radius: 50%;\r\n        float: left;\r\n        margin-right: 10px;\r\n        background-color: #fff;\r\n        padding: 5px;\r\n        border: 1px solid #ddd;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class ChatAvatarComponent {\r\n  @Input() public image!: string;\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-chat-input',\r\n  template: `\r\n    <textarea\r\n      type=\"text\"\r\n      class=\"chat-input-text\"\r\n      placeholder=\"Type message...\"\r\n      #message\r\n      (keypress)=\"searchText()\"\r\n      (keydown.enter)=\"onSubmit()\"\r\n      (keyup.enter)=\"message.value = ''\"\r\n      (keyup.escape)=\"dismiss.emit()\"></textarea>\r\n    <button type=\"submit\" class=\"chat-input-submit\" (click)=\"onSubmit()\">\r\n      {{ buttonText }}\r\n    </button>\r\n  `,\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./chat-input.component.scss']\r\n})\r\nexport class ChatInputComponent implements OnInit {\r\n  @Input() public buttonText = 'Send';\r\n  @Input() public focus = new EventEmitter();\r\n  @Input() public clearSearch = new Subject();\r\n  @Output() public send = new EventEmitter();\r\n  @Output() public searchto = new EventEmitter();\r\n  @Output() public dismiss = new EventEmitter();\r\n  @ViewChild('message') message!: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.focus.subscribe(() => this.focusMessage());\r\n    this.clearSearch.subscribe(() => {\r\n      this.clearMessage();\r\n      this.focusMessage();\r\n    });\r\n  }\r\n\r\n  public focusMessage() {\r\n    this.message.nativeElement.focus();\r\n  }\r\n\r\n  public getMessage() {\r\n    return this.message.nativeElement.value;\r\n  }\r\n\r\n  public clearMessage() {\r\n    this.message.nativeElement.value = '';\r\n  }\r\n\r\n  onSubmit() {\r\n    const message = this.getMessage();\r\n    if (message.trim() === '') {\r\n      return;\r\n    }\r\n    this.send.emit({ message });\r\n    this.clearMessage();\r\n    this.focusMessage();\r\n  }\r\n  searchText() {\r\n    const message = this.getMessage();\r\n    if (message.trim() === '') {\r\n      return;\r\n    }\r\n    this.searchto.emit({ message });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'keys' })\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(value: any, _args?: string[]): any {\r\n    const keys: any[] = [];\r\n    // tslint:disable-next-line:forin\r\n    for (const key in value) {\r\n      keys.push(key);\r\n    }\r\n    return keys;\r\n  }\r\n}\r\n","import { Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { fadeIn, fadeInOut } from '../animations';\r\nimport { ChatBotRasaService } from '../../@core/service/chatbot-rasa.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { RBACINFO } from '../../@core/urls/chat-redbird-ai-url.config';\r\nimport { DataStoreService } from '../../@core/service/data-store.service';\r\n\r\ndeclare let $: any;\r\nconst rand = (max: any) => Math.floor(Math.random() * max);\r\n\r\n@Component({\r\n  selector: 'app-chat-widget',\r\n  templateUrl: './chat-widget.component.html',\r\n  styleUrls: ['./chat-widget.component.scss'],\r\n  animations: [fadeInOut, fadeIn]\r\n})\r\nexport class ChatWidgetComponent implements OnInit {\r\n  @ViewChild('bottom') bottom!: ElementRef;\r\n  @Input() public theme: 'blue' | 'grey' | 'red' = 'blue';\r\n  @Input() public botName = 'Bot';\r\n  @Input() public botAvatar = '../../../../assets/images/redbird_ai.png';\r\n  @Input() public userAvatar = '../../../../assets/images/chat_avator.png';\r\n  @Input() url: any;\r\n  @Input() public startingMessage: any;\r\n  @Input() public opened = false;\r\n  spin = false;\r\n  menuList = [];\r\n  openFeedback = false;\r\n  selectedmessage = '';\r\n  selectQuestion = '';\r\n  public _visible = false;\r\n  private chatService: ChatBotRasaService;\r\n  environment: any;\r\n  RBACORG: RBACINFO = new RBACINFO();\r\n  PERMISSION: any;\r\n  orgSubs!: Subscription;\r\n  orgId: any;\r\n\r\n  constructor(chatService: ChatBotRasaService, private _storeservice: DataStoreService) {\r\n    this.chatService = chatService;\r\n    this.orgSubs =  this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n        this.RBACORG = res['RBACORG'];\r\n        this.environment = this.RBACORG['environment'];\r\n        this.orgId = parseInt(this.RBACORG['orgID']);\r\n        if(this.environment){\r\n          this.chatService.connect(this.environment['ChatBot']);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public get visible() {\r\n    return this._visible;\r\n  }\r\n\r\n  @Input() public set visible(visible) {\r\n    this._visible = visible;\r\n    if (this._visible) {\r\n      setTimeout(() => {\r\n        this.scrollToBottom();\r\n        this.focusMessage();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  public focus = new Subject();\r\n  public clearSearch = new Subject();\r\n\r\n  public operator: any;\r\n\r\n  public client: any;\r\n\r\n  public messages: any[] = [];\r\n  currentMessages: any[] = [];\r\n  sele: any;\r\n  chart: any;\r\n  public addMessage(from: any, text: any, type: 'received' | 'sent', islike: boolean, isdislike: boolean, question: any) {\r\n    this.spin = false;\r\n    this.messages.unshift({\r\n      from,\r\n      text,\r\n      type,\r\n      date: new Date().getTime(),\r\n      islike,\r\n      isdislike,\r\n      question\r\n    });\r\n    this.currentMessages.unshift({\r\n      from,\r\n      text,\r\n      type,\r\n      date: new Date().getTime(),\r\n      islike,\r\n      isdislike,\r\n      question\r\n    });\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  public scrollToBottom() {\r\n    if (this.bottom !== undefined) {\r\n      this.bottom.nativeElement.scrollIntoView();\r\n    }\r\n  }\r\n\r\n  public focusMessage() {\r\n    this.focus.next(true);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    this.startingMessage = 'Hi, how can we help you?';\r\n    this.client = {\r\n      name: 'Guest User',\r\n      status: 'online',\r\n      avatar: this.userAvatar\r\n    };\r\n\r\n    this.operator = {\r\n      name: this.botName,\r\n      status: 'online',\r\n      avatar: this.botAvatar\r\n    };\r\n    if (this.opened) {\r\n      setTimeout(() => (this.visible = true), 1000);\r\n    }\r\n    setTimeout(() => {\r\n      this.addMessage(this.operator, this.startingMessage, 'received', false, false, '');\r\n    }, 1500);\r\n    // setTimeout(() => {\r\n    //   const startingMessage = {\r\n    //     data: ['Referrals', 'Expenses'],\r\n    //     filter: '',\r\n    //     msg: 'Would you like to check the below items ?',\r\n    //     response_type: 'questions',\r\n    //     url: ''\r\n    //   };\r\n    //   this.addMessage(this.operator, startingMessage, 'received', false, false, '');\r\n    // }, 1500);\r\n    this.chatService.getMessages().subscribe((message: any) => {\r\n      setTimeout(() => {\r\n        this.spin = false;\r\n        const msg = isValidJSONString(message.text) ? JSON.parse(message.text) : message.text;\r\n        this.addMessage(this.operator, msg, 'received', false, false, this.selectQuestion);\r\n        setTimeout(() => {\r\n          this.scrollToBottom();\r\n          this.focusMessage();\r\n        }, 0);\r\n      }, 500);\r\n    });\r\n  }\r\n\r\n  public toggleChat() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  public sendMessage({ message }: any) {\r\n    this.selectQuestion = message;\r\n    if (message.trim() === '') {\r\n      return;\r\n    }\r\n    const currentMessage = this.sendMenuKey(message);\r\n    this.addMessage(this.client, message, 'sent', false, false, this.selectQuestion);\r\n    this.spin = true;\r\n    this.chatService.sendMessage(currentMessage);\r\n  }\r\n  public searchMessage({ message }: any) {\r\n    if (message.trim() === '') {\r\n      return;\r\n    }\r\n    this.chatService\r\n      .searchMenus(message)\r\n      .pipe(debounceTime(2000))\r\n      .subscribe((x: any) => {\r\n        if (x) {\r\n          this.menuList = x;\r\n        }\r\n      });\r\n  }\r\n  @HostListener('document:keypress', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n    if (event.key === '/') {\r\n      this.focusMessage();\r\n    }\r\n    if (event.key === '?' && !this._visible) {\r\n      this.toggleChat();\r\n    }\r\n  }\r\n  closeChatBot() {\r\n    this.messages = [];\r\n    this.chatService.disconnect();\r\n    this.startingMessage = 'Hi, how can we help you?';\r\n  }\r\n  showMessage(message: any): any {\r\n    if (message.text && message.text.response_type) {\r\n      return message.text.response_type === 'table' ||\r\n        message.text.response_type === 'text' ||\r\n        message.text.response_type === 'questions' ||\r\n        message.text.response_type === 'link'\r\n        ? true\r\n        : false;\r\n    }\r\n    return false;\r\n  }\r\n  showTable(message: any, type: any): any {\r\n    if (message.text && message.text.response_type) {\r\n      return message.text.response_type === type ? true : false;\r\n    }\r\n    return false;\r\n  }\r\n  getHeaderName(message: any): any {\r\n    if (message.text && message.text.data) {\r\n      return message.text.data[0];\r\n    }\r\n    return {};\r\n  }\r\n  getColumnData(message: any): any {\r\n    if (message.text && message.text.data) {\r\n      return message.text.data;\r\n    }\r\n    return [];\r\n  }\r\n  raiseQuestions(message: any) {\r\n    this.sendMessage({ message });\r\n    setTimeout(() => {\r\n      this.scrollToBottom();\r\n      this.focusMessage();\r\n    }, 0);\r\n  }\r\n  selectMessage(message: any) {\r\n    this.toggleShow();\r\n    this.toClearSearch();\r\n    this.sendMessage({ message });\r\n    setTimeout(() => {\r\n      this.scrollToBottom();\r\n      this.focusMessage();\r\n    }, 0);\r\n  }\r\n  toClearSearch() {\r\n    this.clearSearch.next(true);\r\n  }\r\n  downloadFile(message: any) {\r\n    if (message.text.url) {\r\n      window.open(message.text.url, '_blank');\r\n    }\r\n  }\r\n\r\n  toggleShow() {\r\n    this.menuList = [];\r\n  }\r\n  activeLike(message: any) {\r\n    this.selectedmessage = message;\r\n    this.currentMessages = this.currentMessages.map(x => {\r\n      return {\r\n        type: x.type,\r\n        text: x.text,\r\n        islike: x.text === message.text ? true : x.islike,\r\n        isdislike: x.text === message.text ? false : x.isdislike,\r\n        from: x.from,\r\n        date: x.date,\r\n        question: x.question\r\n      };\r\n    });\r\n    this.openFeedback = true;\r\n  }\r\n  activeDisLike(message: any) {\r\n    this.selectedmessage = message;\r\n    this.currentMessages = this.currentMessages.map(x => {\r\n      return {\r\n        type: x.type,\r\n        text: x.text,\r\n        islike: x.text === message.text ? false : x.islike,\r\n        isdislike: x.text === message.text ? true : x.isdislike,\r\n        from: x.from,\r\n        date: x.date,\r\n        question: x.question\r\n      };\r\n    });\r\n    this.openFeedback = true;\r\n  }\r\n  getLikeStatus(message: any) {\r\n    const isLike = this.currentMessages.filter(x => x.text === message.text && x.islike);\r\n    return isLike.length > 0 ? true : false;\r\n  }\r\n  getDisLikeStatus(message: any) {\r\n    const isDisLike = this.currentMessages.filter(x => x.text === message.text && x.isdislike);\r\n    return isDisLike.length > 0 ? true : false;\r\n  }\r\n  sendFeedback(message: any) {\r\n    const feedbackQue = this.currentMessages.filter(x => x.text === message.text);\r\n    if (feedbackQue.length > 0) {\r\n      this.chatService.sendFeedback(feedbackQue[0]).subscribe(_x => {\r\n        //not to be empty\r\n      });\r\n    }\r\n    this.closeFeedback();\r\n  }\r\n  closeFeedback() {\r\n    this.openFeedback = false;\r\n  }\r\n  sendMenuKey(message: any) {\r\n    if (message === 'Referrals') {\r\n      return 'orref menu';\r\n    } else if (message === 'Expenses') {\r\n      return 'orexp menu';\r\n    } else {\r\n      return message;\r\n    }\r\n  }\r\n  getChatBotInfo(_modal: any){\r\n\r\n  }\r\n}\r\n\r\nfunction isValidJSONString(str: any) {\r\n  try {\r\n    JSON.parse(str);\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n","<div class=\"wrapper {{ theme }}\">\r\n  <div class=\"chat-box\" *ngIf=\"visible\" [@fadeInOut]=\"visible\">\r\n    <div class=\"chat-box-body\">\r\n      <div class=\"chat-box-header\">\r\n        <div class=\"\">\r\n          <div class=\"operator-status\">\r\n            <!-- {{ operator.status }}\r\n            <span class=\"operator-status-online\">●</span> -->\r\n            <button class=\"chat-button-header\" (click)=\"toggleChat()\">✕</button>\r\n          </div>\r\n          <app-chat-avatar class=\"main-avatar\" [image]=\"operator.avatar\"></app-chat-avatar>\r\n          <h3 class=\"operator-name d-none\">\r\n            {{ operator.name }}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"chat-box-main\">\r\n        <div class=\"chat-message-bottom\" #bottom></div>\r\n        <ng-container *ngFor=\"let message of messages\">\r\n          <div class=\"chat-message m-2 mb-4\" [class.chat-message-received]=\"message.type === 'received'\" [@fadeIn]\r\n            [class.chat-message-sent]=\"message.type === 'sent'\">\r\n            <div>\r\n              <app-chat-avatar [image]=\"message.from.avatar\" class=\"chat-message-from-avatar\"></app-chat-avatar>\r\n              <div class=\"chat-message-text\">\r\n                {{ showMessage(message) ? message?.text?.msg : message?.text }}\r\n                <table *ngIf=\"showTable(message, 'table')\" class=\"table table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th class=\"px-1 py-1\" *ngFor=\"let head of getHeaderName(message) | keys\">\r\n                        {{ head }}\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let item of getColumnData(message).slice(0, 4)\">\r\n                      <td class=\"px-1 py-1\" *ngFor=\"let list of item | keys\">\r\n                        {{ item[list] }}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <div *ngIf=\"showTable(message, 'table')\">\r\n                  <a href=\"javascript:void(0)\" (click)=\"getChatBotInfo(message)\">Click here to view more</a>.\r\n                </div>\r\n                <div *ngIf=\"showTable(message, 'link')\">\r\n                  <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"downloadFile(message)\">\r\n                    <em class=\"pi pi-download mr-1\" title=\"Download\"></em>Download</button>.\r\n                </div>\r\n                <ul class=\"list-group questions mt-2\" *ngIf=\"showTable(message, 'questions')\">\r\n                  <li class=\"list-group-item p-2 mb-1 border border-primary\" role=\"button\"\r\n                    *ngFor=\"let item of getColumnData(message)\" (click)=\"raiseQuestions(item)\">\r\n                    {{ item }}\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"chat-message-date\">\r\n              {{ message.date | date: 'short' }}\r\n\r\n              <span style=\"bottom: -6px\" *ngIf=\"message.type === 'received' && message.question\">\r\n                <span class=\"thumbs\">\r\n                  <span title=\"Like\" ngClass=\"{{ getLikeStatus(message) ? 'thumbs-up active' : 'thumbs-up' }}\"\r\n                    (click)=\"activeLike(message)\"></span>\r\n                  <span title=\"Dislike\" ngClass=\"{{ getDisLikeStatus(message) ? 'thumbs-down active' : 'thumbs-down' }}\"\r\n                    (click)=\"activeDisLike(message)\"></span>\r\n                </span>\r\n              </span>\r\n            </div>\r\n            <div class=\"comment mt-n1 mb-3\" *ngIf=\"openFeedback && selectedmessage === message\">\r\n              <p>Enter your feedback here</p>\r\n              <div class=\"feedback-bottom\">\r\n                <input placeholder=\"Type here to share your feedback\" id=\"comment-input\" type=\"text\" maxlength=\"1000\" />\r\n                <div class=\"feedback-send\" (click)=\"sendFeedback(message)\">Send</div>\r\n              </div>\r\n              <span class=\"close-comment\">\r\n                <em class=\"pi pi-times close-btn\" title=\"close\"\r\n                  style=\"width: 10px; height: 10px; vertical-align: top; font-size: 12px\"\r\n                  (click)=\"closeFeedback()\"></em>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"typing\" *ngIf=\"spin\">\r\n            <div class=\"bubble\">\r\n              <div class=\"ellipsis one\"></div>\r\n              <div class=\"ellipsis two\"></div>\r\n              <div class=\"ellipsis three\"></div>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n      <div class=\"chat-box-footer\">\r\n        <app-chat-input (send)=\"sendMessage($event)\" (searchto)=\"searchMessage($event)\" (dismiss)=\"toggleChat()\"\r\n          (focus)=\"(focus)\" [clearSearch]=\"clearSearch\"></app-chat-input>\r\n      </div>\r\n      <div class=\"autosuggest\" *ngIf=\"menuList.length > 0\">\r\n        <div class=\"close-btn d-flex align-items-center justify-content-end mx-2 my-2\">\r\n          <a href=\"javascript:void(0)\" class=\"auto-suggestions-close text-right\" (click)=\"toggleShow()\">\r\n            <em class=\"pi pi-times close-btn\" title=\"close\"></em>\r\n          </a>\r\n        </div>\r\n        <ul class=\"mb-0 mx-2\">\r\n          <li *ngFor=\"let item of menuList\" (click)=\"selectMessage(item)\">\r\n            {{ item }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <button class=\"chat-button\" (click)=\"toggleChat()\">\r\n    <span [@fadeIn] *ngIf=\"visible\">✕</span>\r\n    <span [@fadeIn] *ngIf=\"!visible\">\r\n      <img src=\"../../../../../assets/images/chat.png\" width=\"20\" alt=\"chat-icon\" />\r\n    </span>\r\n  </button>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { RBACINFO } from './pics-chat-redbird-ai/@core/urls/chat-redbird-ai-url.config';\r\nimport { Observable } from 'rxjs';\r\nimport { PermissionStore } from './pics-chat-redbird-ai/@core/permissions/permission.store';\r\nimport { DataStoreService } from './pics-chat-redbird-ai/@core/service/data-store.service';\r\n\r\n@Component({\r\n  selector: 'chat-redbird-ai',\r\n  template: `\r\n      <app-chat-widget botName=\"Cardinality\" theme=\"blue\"></app-chat-widget>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class ChatRedbirdAiComponent implements OnInit {\r\n\r\n  @Input() public RBACORG?: RBACINFO = new RBACINFO();\r\n  @Input() public PERMISSION?: any;\r\n  @Input() public chatEvent!: Observable<any>;\r\n\r\n  constructor(\r\n    private permissionStore: PermissionStore,\r\n    private _storeservice: DataStoreService\r\n  ) {\r\n  }\r\n  ngOnInit() {\r\n     this.chatEvent.subscribe((val: any) => {\r\n      this.RBACORG = val.RBACORG;\r\n      this.PERMISSION = val.PERMISSION;\r\n      this._storeservice.setData('RBACORG', this.RBACORG);\r\n      this.permissionStore.setStore(this.PERMISSION);\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\n  export class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private keepAfterRouteChange = false;\r\n\r\n    constructor(private router: Router) {\r\n      // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\r\n      router.events.subscribe(event => {\r\n        if (event instanceof NavigationStart) {\r\n          if (this.keepAfterRouteChange) {\r\n            // only keep for a single route change\r\n            this.keepAfterRouteChange = false;\r\n          } else {\r\n            // clear alert messages\r\n            this.clear();\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    getAlert(): Observable<any> {\r\n      return this.subject.asObservable();\r\n    }\r\n\r\n    success(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Success, message, keepAfterRouteChange);\r\n    }\r\n\r\n    error(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Error, message, keepAfterRouteChange);\r\n    }\r\n\r\n    info(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Info, message, keepAfterRouteChange);\r\n    }\r\n\r\n    warn(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Warning, message, keepAfterRouteChange);\r\n    }\r\n\r\n    alert(type: AlertType, message: string, keepAfterRouteChange = false) {\r\n      this.keepAfterRouteChange = keepAfterRouteChange;\r\n      this.subject.next(<Alert>{ type: type, message: message });\r\n    }\r\n\r\n    clear() {\r\n      // clear alerts\r\n      this.subject.next(<any>{});\r\n    }\r\n  }\r\n  export interface DynamicObject {\r\n    [key: string]: any;\r\n  }\r\n\r\n  export enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n  }\r\n  export class Alert {\r\n    type!: AlertType;\r\n    message!: string;\r\n  }\r\n  export interface Insights {\r\n    name: string;\r\n    series: Series[];\r\n  }\r\n  export interface Series {\r\n    value: number;\r\n    name: string;\r\n    month: string;\r\n  }\r\n\r\n  export interface Status {\r\n    name: string;\r\n    value: number;\r\n  }\r\n\r\n  export class UserGroupDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    constructor(data?: Partial<UserGroupDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserRolePageDto {\r\n    id?: number;\r\n    name?: string;\r\n    route?: string;\r\n    icon?: string | null;\r\n    order?: number;\r\n    ismenu?: boolean;\r\n    constructor(data?: Partial<UserRolePageDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserRoleDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    priority?: number;\r\n    order?: number;\r\n    defaultpage?: UserRolePageDto;\r\n    defaultpageid?: number;\r\n    parentid?: number | null;\r\n    parent?: UserRoleDto | null;\r\n    constructor(data?: Partial<UserRoleDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    priority?: number;\r\n    order?: number;\r\n    defaultpage?: UserRolePageDto;\r\n    defaultpageid?: number;\r\n    parentid?: number | null;\r\n    parent?: UserRoleDto | null;\r\n    constructor(data?: Partial<UserDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n  export class AccessManagementConfig {\r\n    public static EndPoint = {\r\n      Organization: {\r\n        getOrganizationList: '/org/organization/all',\r\n        getOrganization: '/platform/page-designer/page/organization/{orgId}?returnUserPage=false&excludeNoActiveVersionPages=true'\r\n      }\r\n    };\r\n  }\r\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\nimport { map } from 'rxjs/operators';\r\nimport { DataStoreService } from './data-store.service';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n    RBACORG: any;\r\n    overrideUrl = true;\r\n    errorData!: HttpErrorResponse;\r\n    baseUrl = '';\r\n    tokenKey: any;\r\n    public headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('role', 'role=CP_PUBLIC');\r\n\r\n    public showSpinner: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    public outsideShowSpinner: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    url1: string;\r\n    url: any;\r\n    constructor(private http: HttpClient, private _storeservice: DataStoreService) {\r\n      this._storeservice.currentStore.subscribe((res: any) => {\r\n        if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n          this.RBACORG = res['RBACORG'];\r\n          this.url = this.RBACORG['apiHost'] ? this.RBACORG['apiHost'] : 'http://localhost:3000/api';\r\n          this.tokenKey = this.RBACORG['tokenKey'];\r\n        }\r\n      });\r\n      this.url1 = '';\r\n    }\r\n\r\n    get(apiRoute: string) {\r\n      return this.http.get(`${this.url + apiRoute}`, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    post(apiRoute: string, body: any) {\r\n      return this.http.post(`${this.url + apiRoute}`, body, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    put(apiRoute: string, body: any) {\r\n      return this.http.put(`${this.url + apiRoute}`, body, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    patch(apiRoute: string, body?: any) {\r\n      return this.http.patch(`${this.url + apiRoute}`, body, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    delete(apiRoute: string) {\r\n      return this.http.delete(`${this.url + apiRoute}`, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    getHttpHeaders(): HttpHeaders {\r\n      return new HttpHeaders().set('key', 'value');\r\n    }\r\n    getHttpNewHeaders(): HttpHeaders {\r\n      return this.headers.set('Authorization', `Bearer ${this.getToken()}`);\r\n    }\r\n    getAttachmentHttpHeaders(contentType: any): HttpHeaders {\r\n      return new HttpHeaders().set('Content-Type', contentType).set('x-ms-blob-type', 'BlockBlob');\r\n    }\r\n    putUpload(apiRoute: string, body: any, contentType: any) {\r\n      return this.http.put(`${this.url1 + apiRoute}`, body, { headers: this.getAttachmentHttpHeaders(contentType) });\r\n    }\r\n\r\n    putupload2(apiRoute: string, body: any, contenttype: any): Observable<any> {\r\n      return this.http\r\n        .put(`${this.url1 + apiRoute}`, body, {\r\n          headers: this.getAttachmentHttpHeaders(contenttype),\r\n          observe: 'response'\r\n        })\r\n        .pipe(\r\n          map(data => {\r\n            return data;\r\n          })\r\n        );\r\n    }\r\n    /**\r\n     *\r\n     * @param apiRoute\r\n     * This function will download the stream file from the API service.\r\n     * No HTTP required for this stream. So used Window.location.href to download the file\r\n     */\r\n    getFormDownloaded(apiRoute: string) {\r\n      window.location.href = `${this.url + apiRoute}`;\r\n    }\r\n    //common http service(optional)\r\n\r\n    handleError(error: HttpErrorResponse) {\r\n      let errorMessage = '';\r\n      if (error.error instanceof ErrorEvent) {\r\n        // Client-side errors\r\n        errorMessage = `Error: ${error.error.message}`;\r\n      } else {\r\n        // Server-side errors\r\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${\r\n          error?.error?.message ? error?.error?.message : error.message\r\n        }`;\r\n      }\r\n      return throwError(errorMessage);\r\n    }\r\n    getToken(): any {\r\n      const token = this.tokenKey ? this.tokenKey : 'jwt-token';\r\n      return sessionStorage.getItem(token);\r\n    }\r\n  }\r\n\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chat-config',\r\n  template: `\r\n    <div class=\"chat-config\">\r\n      {{ text }}\r\n      <button *ngFor=\"let item of themes\" class=\"btn\" [class.btn-active]=\"item === theme\" (click)=\"setTheme(item)\">\r\n        {{ item }}\r\n      </button>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .chat-config {\r\n        padding: 20px;\r\n      }\r\n      .btn {\r\n        padding: 5px;\r\n        margin: 0px 2px;\r\n        border: 1px solid #dedede;\r\n        outline: none;\r\n      }\r\n      .btn-active {\r\n        border: 1px solid #a0a0a0;\r\n      }\r\n      .btn:focus {\r\n        border: 1px solid #333;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class ChatConfigComponent {\r\n  @Input() public theme!: string;\r\n  @Input() public text = 'Select theme';\r\n  @Output() public themeChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  public themes = ['blue', 'grey', 'red'];\r\n  public setTheme(theme: any) {\r\n    this.theme = theme;\r\n    this.themeChange.emit(this.theme);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { PermissionStore } from './@core/permissions/permission.store';\r\nimport { KeysPipe } from './@core/pipes/array-keys.pipe';\r\nimport { AlertService } from './@core/service/alert.service';\r\nimport { ChatBotRasaService } from './@core/service/chatbot-rasa.service';\r\nimport { DataStoreService } from './@core/service/data-store.service';\r\nimport { HttpService } from './@core/service/http.service';\r\nimport { ChatAvatarComponent } from './chat-redbird-ai/chat-avatar/chat-avatar.component';\r\nimport { ChatConfigComponent } from './chat-redbird-ai/chat-config/chat-config.component';\r\nimport { ChatInputComponent } from './chat-redbird-ai/chat-input/chat-input.component';\r\nimport { ChatWidgetComponent } from './chat-redbird-ai/chat-widget/chat-widget.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ChatAvatarComponent, ChatWidgetComponent, ChatInputComponent, ChatConfigComponent, KeysPipe\r\n  ],\r\n  imports: [CommonModule],\r\n  exports: [ChatWidgetComponent, ChatConfigComponent],\r\n  entryComponents: [ChatWidgetComponent, ChatConfigComponent],\r\n  providers: [ChatBotRasaService, HttpClient, HttpService, AlertService, ConfirmationService, PermissionStore, DataStoreService],\r\n  schemas: [NO_ERRORS_SCHEMA]\r\n})\r\nexport class PicsChatRedbirdAiModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { ChatRedbirdAiComponent } from './chat-redbird-ai.component';\r\nimport { PicsChatRedbirdAiModule } from './pics-chat-redbird-ai/pics-chat-redbird-ai.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ChatRedbirdAiComponent\r\n  ],\r\n  imports: [\r\n    PicsChatRedbirdAiModule\r\n  ],\r\n  exports: [\r\n    ChatRedbirdAiComponent\r\n  ]\r\n})\r\nexport class CardiChatRedbirdAiModule { }\r\n","/*\r\n * Public API Surface of chat-redbird-ai\r\n */\r\n\r\nexport * from './lib/chat-redbird-ai.service';\r\nexport * from './lib/chat-redbird-ai.component';\r\nexport * from './lib/chat-redbird-ai.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.DataStoreService","i1.ChatBotRasaService","i3.ChatAvatarComponent","i4.ChatInputComponent","i6.KeysPipe","i1.PermissionStore","i3.ChatWidgetComponent","i1"],"mappings":"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"}